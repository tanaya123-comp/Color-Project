[{"E:\\NodeJs_Projects\\color-app\\src\\index.js":"1","E:\\NodeJs_Projects\\color-app\\src\\App.js":"2","E:\\NodeJs_Projects\\color-app\\src\\reportWebVitals.js":"3","E:\\NodeJs_Projects\\color-app\\src\\Pallete.js":"4","E:\\NodeJs_Projects\\color-app\\src\\seedColors.js":"5","E:\\NodeJs_Projects\\color-app\\src\\ColorBox.js":"6","E:\\NodeJs_Projects\\color-app\\src\\colorHelpers.js":"7","E:\\NodeJs_Projects\\color-app\\src\\Navbar.js":"8","E:\\NodeJs_Projects\\color-app\\src\\PaletteList.js":"9","E:\\NodeJs_Projects\\color-app\\src\\MiniPalette.js":"10","E:\\NodeJs_Projects\\color-app\\src\\SingleColorPalette.js":"11","E:\\NodeJs_Projects\\color-app\\src\\PaletteFooter.js":"12","E:\\NodeJs_Projects\\color-app\\src\\styles\\colorBoxStyles.js":"13","E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteStyle.js":"14","E:\\NodeJs_Projects\\color-app\\src\\styles\\MiniPaletteStyles.js":"15","E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteFooterstyles.js":"16","E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteList.js":"17","E:\\NodeJs_Projects\\color-app\\src\\styles\\NavBarStyles.js":"18","E:\\NodeJs_Projects\\color-app\\src\\NewPaletteForm.js":"19","E:\\NodeJs_Projects\\color-app\\src\\DraggableBox.js":"20","E:\\NodeJs_Projects\\color-app\\src\\DraggableColorList.js":"21","E:\\NodeJs_Projects\\color-app\\src\\PaletteFormNav.js":"22","E:\\NodeJs_Projects\\color-app\\src\\ColorPickerForm.js":"23","E:\\NodeJs_Projects\\color-app\\src\\PaletteMetaForm.js":"24","E:\\NodeJs_Projects\\color-app\\src\\styles\\NewPaletteFormStyles.js":"25","E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteFormNavStyles.js":"26","E:\\NodeJs_Projects\\color-app\\src\\styles\\ColorPickerFormStyles.js":"27","E:\\NodeJs_Projects\\color-app\\src\\styles\\DraggableBoxStyles.js":"28","E:\\NodeJs_Projects\\color-app\\src\\constants.js":"29","E:\\NodeJs_Projects\\color-app\\src\\styles\\sizes.js":"30"},{"size":594,"mtime":1608291592880,"results":"31","hashOfConfig":"32"},{"size":2399,"mtime":1609590248050,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":2018,"mtime":1609140950456,"results":"35","hashOfConfig":"32"},{"size":10526,"mtime":1608293570289,"results":"36","hashOfConfig":"32"},{"size":5797,"mtime":1609140732500,"results":"37","hashOfConfig":"32"},{"size":1207,"mtime":1608096778930,"results":"38","hashOfConfig":"32"},{"size":4477,"mtime":1609156274875,"results":"39","hashOfConfig":"32"},{"size":2400,"mtime":1609590427017,"results":"40","hashOfConfig":"32"},{"size":2555,"mtime":1609590460802,"results":"41","hashOfConfig":"32"},{"size":3587,"mtime":1609140305011,"results":"42","hashOfConfig":"32"},{"size":445,"mtime":1609141573029,"results":"43","hashOfConfig":"32"},{"size":2865,"mtime":1609595226817,"results":"44","hashOfConfig":"32"},{"size":431,"mtime":1609594937419,"results":"45","hashOfConfig":"32"},{"size":1369,"mtime":1609588818259,"results":"46","hashOfConfig":"32"},{"size":311,"mtime":1609141570178,"results":"47","hashOfConfig":"32"},{"size":941,"mtime":1609157494259,"results":"48","hashOfConfig":"32"},{"size":1345,"mtime":1609156211468,"results":"49","hashOfConfig":"32"},{"size":4938,"mtime":1609513757359,"results":"50","hashOfConfig":"32"},{"size":810,"mtime":1609514429468,"results":"51","hashOfConfig":"32"},{"size":639,"mtime":1609415766723,"results":"52","hashOfConfig":"32"},{"size":3793,"mtime":1609587242384,"results":"53","hashOfConfig":"32"},{"size":3229,"mtime":1609514281037,"results":"54","hashOfConfig":"32"},{"size":3737,"mtime":1609512967431,"results":"55","hashOfConfig":"32"},{"size":1848,"mtime":1609586836080,"results":"56","hashOfConfig":"32"},{"size":1167,"mtime":1609596372911,"results":"57","hashOfConfig":"32"},{"size":342,"mtime":1609514262744,"results":"58","hashOfConfig":"32"},{"size":1062,"mtime":1609595986945,"results":"59","hashOfConfig":"32"},{"size":30,"mtime":1609514657200,"results":"60","hashOfConfig":"32"},{"size":693,"mtime":1609594412634,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"jgbmow",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\NodeJs_Projects\\color-app\\src\\index.js",[],["136","137"],"E:\\NodeJs_Projects\\color-app\\src\\App.js",["138","139"],"E:\\NodeJs_Projects\\color-app\\src\\reportWebVitals.js",[],"E:\\NodeJs_Projects\\color-app\\src\\Pallete.js",["140"],"import React,{Component} from 'react';\r\nimport ColorBox from './ColorBox';\r\n\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport Navbar from './Navbar';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport styles from './styles/PaletteStyle';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\n// const styles={\r\n\r\n//     Palette:{\r\n//         height: \"100vh\",   \r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     },\r\n//     Colors:{\r\n//         height: \"90%\",\r\n//     }\r\n\r\n// };\r\n\r\nclass Pallete extends Component{\r\n\r\n        constructor(props){\r\n\r\n            super(props);\r\n\r\n            this.state={ level: 500 ,format:\"hex\" };\r\n\r\n            this.changeLevel=this.changeLevel.bind(this);\r\n\r\n            this.changeFormat=this.changeFormat.bind(this);\r\n\r\n        }\r\n\r\n         changeLevel(level) {\r\n            this.setState({level});\r\n        }\r\n\r\n        changeFormat(val){\r\n\r\n            this.setState({format:val});\r\n\r\n        }\r\n\r\n        render()\r\n        {\r\n            const { colors,paletteName,emoji,id } =this.props.palette;\r\n            const { level ,format } =this.state;\r\n            const { classes } =this.props;\r\n            const colorBoxes=colors[level].map(c=>{\r\n                    \r\n                return  <ColorBox background={c[format]} name={c.name} key={c.id} id={c.id} paletteId={id} showLink={true}/>\r\n            });\r\n\r\n          \r\n\r\n            return(\r\n                <div className={classes.Palette}>\r\n                    \r\n                    <Navbar level={level} changeLevel={this.changeLevel} changeFormat={this.changeFormat} showAllColors={true}/>\r\n                   \r\n                    <div className={classes.Colors}>\r\n                        {colorBoxes}\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <PaletteFooter paletteName={paletteName} emoji={emoji}/>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Pallete);","E:\\NodeJs_Projects\\color-app\\src\\seedColors.js",["141"],"export default [\r\n    {\r\n      paletteName: \"Material UI Colors\",\r\n      id: \"material-ui-colors\",\r\n      emoji: \"🎨\",\r\n      colors: [\r\n        { name: \"red\", color: \"#F44336\" },\r\n        { name: \"pink\", color: \"#E91E63\" },\r\n        { name: \"purple\", color: \"#9C27B0\" },\r\n        { name: \"deeppurple\", color: \"#673AB7\" },\r\n        { name: \"indigo\", color: \"#3F51B5\" },\r\n        { name: \"blue\", color: \"#2196F3\" },\r\n        { name: \"lightblue\", color: \"#03A9F4\" },\r\n        { name: \"cyan\", color: \"#00BCD4\" },\r\n        { name: \"teal\", color: \"#009688\" },\r\n        { name: \"green\", color: \"#4CAF50\" },\r\n        { name: \"lightgreen\", color: \"#8BC34A\" },\r\n        { name: \"lime\", color: \"#CDDC39\" },\r\n        { name: \"yellow\", color: \"#FFEB3B\" },\r\n        { name: \"amber\", color: \"#FFC107\" },\r\n        { name: \"orange\", color: \"#FF9800\" },\r\n        { name: \"deeporange\", color: \"#FF5722\" },\r\n        { name: \"brown\", color: \"#795548\" },\r\n        { name: \"grey\", color: \"#9E9E9E\" },\r\n        { name: \"bluegrey\", color: \"#607D8B\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors v1\",\r\n      id: \"flat-ui-colors-v1\",\r\n      emoji: \"🤙\",\r\n      colors: [\r\n        { name: \"Turquoise\", color: \"#1abc9c\" },\r\n        { name: \"Emerald\", color: \"#2ecc71\" },\r\n        { name: \"PeterRiver\", color: \"#3498db\" },\r\n        { name: \"Amethyst\", color: \"#9b59b6\" },\r\n        { name: \"WetAsphalt\", color: \"#34495e\" },\r\n        { name: \"GreenSea\", color: \"#16a085\" },\r\n        { name: \"Nephritis\", color: \"#27ae60\" },\r\n        { name: \"BelizeHole\", color: \"#2980b9\" },\r\n        { name: \"Wisteria\", color: \"#8e44ad\" },\r\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n        { name: \"SunFlower\", color: \"#f1c40f\" },\r\n        { name: \"Carrot\", color: \"#e67e22\" },\r\n        { name: \"Alizarin\", color: \"#e74c3c\" },\r\n        { name: \"Clouds\", color: \"#ecf0f1\" },\r\n        { name: \"Concrete\", color: \"#95a5a6\" },\r\n        { name: \"Orange\", color: \"#f39c12\" },\r\n        { name: \"Pumpkin\", color: \"#d35400\" },\r\n        { name: \"Pomegranate\", color: \"#c0392b\" },\r\n        { name: \"Silver\", color: \"#bdc3c7\" },\r\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Dutch\",\r\n      id: \"flat-ui-colors-dutch\",\r\n      emoji: \"🇳🇱\",\r\n      colors: [\r\n        { name: \"Sunflower\", color: \"#FFC312\" },\r\n        { name: \"Energos\", color: \"#C4E538\" },\r\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n        { name: \"BaraRose\", color: \"#ED4C67\" },\r\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n        { name: \"LavenderTea\", color: \"#D980FA\" },\r\n        { name: \"VerryBerry\", color: \"#B53471\" },\r\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n        { name: \"PixelatedGrass\", color: \"#009432\" },\r\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n        { name: \"HollyHock\", color: \"#833471\" },\r\n        { name: \"RedPigment\", color: \"#EA2027\" },\r\n        { name: \"TurkishAqua\", color: \"#006266\" },\r\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors American\",\r\n      id: \"flat-ui-colors-american\",\r\n      emoji: \"🇺🇸\",\r\n      colors: [\r\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n        { name: \"FadedPoster\", color: \"#81ecec\" },\r\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n        { name: \"CityLights\", color: \"#dfe6e9\" },\r\n        { name: \"MintLeaf\", color: \"#00b894\" },\r\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n        { name: \"FirstDate\", color: \"#fab1a0\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n        { name: \"AmericanRiver\", color: \"#636e72\" },\r\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n        { name: \"OrangeVille\", color: \"#e17055\" },\r\n        { name: \"Chi-Gong\", color: \"#d63031\" },\r\n        { name: \"PrunusAvium\", color: \"#e84393\" },\r\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Aussie\",\r\n      id: \"flat-ui-colors-aussie\",\r\n      emoji: \"🇦🇺\",\r\n      colors: [\r\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n        { name: \"JuneBud\", color: \"#badc58\" },\r\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n        { name: \"Turbo\", color: \"#f9ca24\" },\r\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n        { name: \"PureApple\", color: \"#6ab04c\" },\r\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n        { name: \"Heliotrope\", color: \"#e056fd\" },\r\n        { name: \"ExodusFruit\", color: \"#686de0\" },\r\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n        { name: \"SteelPink\", color: \"#be2edd\" },\r\n        { name: \"Blurple\", color: \"#4834d4\" },\r\n        { name: \"DeepCove\", color: \"#130f40\" },\r\n        { name: \"WizardGrey\", color: \"#535c68\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors British\",\r\n      id: \"flat-ui-colors-british\",\r\n      emoji: \"🇬🇧\",\r\n      colors: [\r\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n        { name: \"Seabrook\", color: \"#487eb0\" },\r\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n        { name: \"Naval\", color: \"#40739e\" },\r\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n        { name: \"MazarineBlue\", color: \"#273c75\" },\r\n        { name: \"BlueNights\", color: \"#353b48\" },\r\n        { name: \"HarleyOrange\", color: \"#c23616\" },\r\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n        { name: \"ChainGangGrey\", color: \"#718093\" },\r\n        { name: \"PicoVoid\", color: \"#192a56\" },\r\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Spanish\",\r\n      id: \"flat-ui-colors-spanish\",\r\n      emoji: \"🇪🇸\",\r\n      colors: [\r\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n        { name: \"C64Purple\", color: \"#706fd3\" },\r\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n        { name: \"SummerSky\", color: \"#34ace0\" },\r\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n        { name: \"Liberty\", color: \"#474787\" },\r\n        { name: \"HotStone\", color: \"#aaa69d\" },\r\n        { name: \"DevilBlue\", color: \"#227093\" },\r\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n        { name: \"ChileanFire\", color: \"#cd6133\" },\r\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n        { name: \"Desert\", color: \"#ccae62\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Indian\",\r\n      id: \"flat-ui-colors-indian\",\r\n      emoji: \"🇮🇳\",\r\n      colors: [\r\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n        { name: \"RichGardenia\", color: \"#F97F51\" },\r\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n        { name: \"Keppel\", color: \"#58B19F\" },\r\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n        { name: \"BlueBell\", color: \"#3B3B98\" },\r\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n        { name: \"OasisStream\", color: \"#9AECDB\" },\r\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n        { name: \"PineGlade\", color: \"#BDC581\" },\r\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors French\",\r\n      id: \"flat-ui-colors-french\",\r\n      emoji: \"🇫🇷\",\r\n      colors: [\r\n        { name: \"FlatFlesh\", color: \"#fad390\" },\r\n        { name: \"MelonMelody\", color: \"#f8c291\" },\r\n        { name: \"Livid\", color: \"#6a89cc\" },\r\n        { name: \"Spray\", color: \"#82ccdd\" },\r\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n        { name: \"MandarinRed\", color: \"#e55039\" },\r\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n        { name: \"Dupain\", color: \"#60a3bc\" },\r\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n        { name: \"Waterfall\", color: \"#38ada9\" },\r\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n        { name: \"JalapenoRed\", color: \"#b71540\" },\r\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n        { name: \"ReefEncounter\", color: \"#079992\" }\r\n      ]\r\n    }\r\n  ];","E:\\NodeJs_Projects\\color-app\\src\\ColorBox.js",[],"E:\\NodeJs_Projects\\color-app\\src\\colorHelpers.js",[],"E:\\NodeJs_Projects\\color-app\\src\\Navbar.js",[],"E:\\NodeJs_Projects\\color-app\\src\\PaletteList.js",[],"E:\\NodeJs_Projects\\color-app\\src\\MiniPalette.js",[],"E:\\NodeJs_Projects\\color-app\\src\\SingleColorPalette.js",["142","143"],"import { colors } from '@material-ui/core';\r\nimport React,{Component} from 'react';\r\nimport ColorBox from './ColorBox';\r\nimport './SingleColorPalette.css';\r\nimport Navbar from './Navbar';\r\nimport PaletteFooter from './PaletteFooter';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport chroma from 'chroma-js';\r\n\r\nconst styles={\r\n\r\n        Palette:{\r\n            height: \"100vh\",   \r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        },\r\n        Colors:{\r\n            height: \"90%\",\r\n        },\r\n        goBack:{\r\n                width: \"20%\",\r\n                height: \"50%\",\r\n                margin: \"0 auto\",\r\n                display: \"inline-block\",\r\n                position: \"relative\",\r\n                cursor: \"pointer\",\r\n                marginBottom: \"-0.3px\",\r\n                opacity:1,\r\n                backgroundColor:\"black\",\r\n                \"& a\":{\r\n                        color:\"white\",\r\n                        width: \"100px\",\r\n            height:\"30px\",\r\n            position: \"absolute\",\r\n            display: \"inline-block\",\r\n            top:\"50%\",\r\n            left:\"50%\",\r\n            marginLeft: \"-50px\",\r\n            marginTop: \"-15px\",\r\n            textAlign: \"center\",\r\n            outline: \"none\",\r\n            background: \"rgba(255,255,255,0.3)\",\r\n            fontSize: \"1rem\",\r\n            lineHeight: \"30px\",\r\n            textTransform: \"uppercase\",\r\n            border: \"none\",\r\n            \r\n                }\r\n               \r\n        }\r\n    \r\n    };\r\n\r\nclass SingleColorPalette extends Component{\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this._shades=this.gatherColors(this.props.palette,this.props.colorId);\r\n            console.log(this._shades)\r\n\r\n            this.state={ format:\"hex\" };\r\n\r\n           \r\n\r\n            this.changeFormat=this.changeFormat.bind(this);\r\n        }\r\n      \r\n    \r\n            changeFormat(val){\r\n    \r\n                this.setState({format:val});\r\n    \r\n            }\r\n    \r\n\r\n        gatherColors(paletteId,colorId){\r\n\r\n                let shades=[];\r\n\r\n                let allColors=paletteId.colors;\r\n\r\n                for(let k in allColors)\r\n                {\r\n                        shades=shades.concat(\r\n                                allColors[k].filter(c=>(c.id===colorId)\r\n\r\n                                ));\r\n                }\r\n                return shades.slice(1);\r\n        }\r\n\r\n        render(){\r\n                const { classes } =this.props;\r\n                const colorboxes=this._shades.map(c=>(\r\n                        <ColorBox key={c.id} name={c.name} background={c[this.state.format]} showLink={false}/>\r\n                ));\r\n\r\n                return(\r\n                        <div className={classes.Palette}>\r\n                                <Navbar changeFormat={this.changeFormat} showAllColors={false} />\r\n                                <div className={classes.Colors}>\r\n                                        {colorboxes}\r\n                                        <div className={classes.goBack}>\r\n                                        <Link to={`/palette/${this.props.palette.id}`} >Go Back</Link>\r\n                                        </div>\r\n                                       \r\n                                </div>\r\n                                <PaletteFooter paletteName={this.props.palette.paletteName} emoji={this.props.palette.emoji}/>\r\n                        </div>\r\n                );\r\n\r\n        }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SingleColorPalette);","E:\\NodeJs_Projects\\color-app\\src\\PaletteFooter.js",["144"],"import React,{Component} from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from './styles/PaletteFooterstyles';\r\n\r\nfunction PaletteFooter(props){\r\n\r\n    const {classes} =props;\r\n    return(\r\n        <footer className={classes.PaletteFooter}>\r\n        {props.paletteName}\r\n        <span className={classes.Emoji}>{props.emoji}</span>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PaletteFooter);","E:\\NodeJs_Projects\\color-app\\src\\styles\\colorBoxStyles.js",["145"],"E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteStyle.js",["146"],"E:\\NodeJs_Projects\\color-app\\src\\styles\\MiniPaletteStyles.js",["147"],"export default {\r\n    root:{\r\n         backgroundColor:\"white\",\r\n         border:\"1px solid black\",\r\n         padding:\"0.5rem\",\r\n         position:\"relative\",\r\n         overflow:\"hidden\",\r\n         cursor:\"pointer\",\r\n         \"&:hover svg\":{      //we can't access class names as they are dynamic\r\n             opacity:1\r\n         }\r\n \r\n    },\r\n    coloring:{\r\n         backgroundColor:\"#dae1e4\",\r\n         height:\"150px\",\r\n         width:\"100%\",\r\n         borderRadius:\"5px\",\r\n         overflow:\"hidden\",\r\n    },\r\n    title:{\r\n         display:\"flex\",\r\n         justifyContent:\"space-between\",\r\n         alignItems:\"centre\",\r\n         margin:\"0\",\r\n         color:\"black\",\r\n         paddingTop:\"0.5rem\",\r\n         fontSize:\"1rem\",\r\n         position:\"relative\",\r\n    },\r\n    emoji:{\r\n         marginLeft:\"0.5rem\",\r\n         fontSize:\"1.5rem\",\r\n    },\r\n    miniColors:{\r\n     height:\"25%\",\r\n     width:\"20%\",\r\n     display:\"inline-block\",\r\n     margin:\"0 auto\",\r\n     position:\"relative\",\r\n     marginBottom:\"-3.5px\",\r\n     backgroundColor:\"pink\"\r\n    },\r\n    delete:{\r\n\r\n    },\r\n    deleteIcon:{\r\n         color:\"white\",\r\n         backgroundColor:\"#eb3d30\",\r\n         width:\"20px\",\r\n         height:\"20px\",\r\n         position:\"absolute\",\r\n         right:\"0px\",\r\n         top:\"0px\",\r\n         padding:\"10px\",\r\n          zIndex:10,\r\n          opacity:0,\r\n    }\r\n \r\n \r\n };","E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteFooterstyles.js",["148"],"export default {\r\n    PaletteFooter:{\r\n        backgroundColor: \"white\",\r\n        height:\"5vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems:\"center\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    \r\n    Emoji:{\r\n        fontSize: \"1.5rem\",\r\n        margin: \"0 1rem\",\r\n    }\r\n};","E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteList.js",["149"],"export default {\r\n    \r\n\r\n        root:{\r\n            backgroundColor:\"blue\",\r\n            height:\"100%\",\r\n            display:\"flex\",\r\n            alignItems:\"flex-start\",\r\n            justifyContent:\"centre\",\r\n        },\r\n        container:{\r\n            width:\"50%\",\r\n            display:\"flex\",\r\n            alignItems:\"flex-start\",\r\n            flexDirection:\"column\",\r\n            flexwrap:\"wrap\",\r\n            border:\"1px solid white\",\r\n    \r\n        },\r\n        nav:{\r\n            display:\"flex\",\r\n            width:\"100%\",\r\n            justifyContent:\"space-content\",\r\n            alignItems:\"centre\",\r\n            color:\"white\",\r\n            \"& a\":{\r\n                color:\"white\",\r\n            }\r\n        },\r\n        palettes:{\r\n            boxSizing:\"border-box\",\r\n            width:\"100%\",\r\n            display:\"grid\",\r\n            gridTemplateColumns:\"repeat(3,30%)\",\r\n            gridGap:\"5%\",\r\n    \r\n        }\r\n    \r\n    \r\n};","E:\\NodeJs_Projects\\color-app\\src\\styles\\NavBarStyles.js",["150"],"export default {\r\n    Navbar:{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        height: \"6vh\",\r\n    \r\n    },\r\n    \r\n    logo:{\r\n        marginRight: \"15px\",\r\n        padding: \"0 13px\",\r\n        fontSize: \"22px\",\r\n        backgroundColor: \"#eceff1\",\r\n        fontFamily: \"Roboto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& a\":{\r\n            textDecoration: \"none\",\r\n            color: \"black\",\r\n        }\r\n    \r\n    },\r\n    \r\n    \r\n    \r\n    \r\n    slider :{\r\n        width: \"350px\",\r\n        margin: \"0 10px\",\r\n        display: \"inline-block\",\r\n\r\n        \"& rc-slider-track\":{\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        \r\n        \"& rc-slider-rail\":{\r\n            height: \"8px\",\r\n        },\r\n        \r\n        \"& rc-slider-handle,rc-slider-handle:active,rc-slider-handle:hover,rc-slider-handle:focus\":{\r\n            backgroundColor: \"green\",\r\n            outline: \"none\",\r\n            border:\"2px solid green\",\r\n            boxShadow: \"none\",\r\n            width:\"13px\",\r\n            height: \"13px\",\r\n            marginLeft: \"-7px\",\r\n            marginTop: \"-3px\",\r\n        \r\n        },\r\n        \r\n        \r\n        \r\n    },\r\n    selectContainer:{\r\n        marginLeft: \"auto\",\r\n        marginRight: \"1rem\",\r\n    }\r\n}","E:\\NodeJs_Projects\\color-app\\src\\NewPaletteForm.js",["151"],"import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from './styles/NewPaletteFormStyles';\r\n\r\n\r\n\r\n\r\nimport DraggableColorList from './DraggableColorList';\r\nimport { arrayMove } from 'react-sortable-hoc';\r\n\r\nimport PaletteFormNav from './PaletteFormNav';\r\n\r\nimport ColorPickerForm from './ColorPickerForm';\r\n\r\n\r\n\r\n//import DraggableColorBox from './DraggableColorBox';\r\n\r\n\r\n\r\nclass NewPaletteForm extends Component {\r\n\r\n  static defaultProps={\r\n    maxColors:20\r\n  }\r\n\r\n constructor(props){\r\n   super(props);\r\n   this.state={\r\n     open:true,\r\n   \r\n     newColorName:\"\",\r\n     colors:this.props.palettes[0].colors,\r\n     newPaletteName:\"\",\r\n   };\r\n\r\n   this.updateCurrentColor=this.updateCurrentColor.bind(this);\r\n\r\n   this.addNewColor=this.addNewColor.bind(this);\r\n\r\n   this.handleChange=this.handleChange.bind(this);\r\n\r\n   this.handleSubmit=this.handleSubmit.bind(this);\r\n\r\n   this.removeColor=this.removeColor.bind(this);\r\n\r\n   this.clearColors=this.clearColors.bind(this);\r\n\r\n   this.addRandomColor=this.addRandomColor.bind(this);\r\n }\r\n  \r\n handleSubmit(newPalette)\r\n {\r\n   newPalette.id=newPalette.paletteName.toLowerCase().replace(/ /g,\"-\");\r\n   newPalette.colors=this.state.colors;\r\n    \r\n    this.props.savePalette(newPalette);\r\n\r\n    this.props.history.push(\"/\");\r\n }\r\n  \r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  updateCurrentColor(newColor){\r\n\r\n    this.setState({currentColor:newColor.hex});\r\n\r\n  }\r\n\r\n  removeColor(colorName){\r\n      this.setState({\r\n        colors:this.state.colors.filter(color=>color.name!==colorName)\r\n      })\r\n  }\r\n\r\n  \r\n  \r\n  addNewColor(newColor){\r\n\r\n    // const color={\r\n\r\n    //   color:this.state.currentColor,\r\n\r\n    //   name:this.state.newColorName,\r\n\r\n    // };\r\n\r\n    this.setState({colors:[...this.state.colors,newColor]});\r\n  }\r\n\r\n  handleChange(evt){\r\n      this.setState({[evt.target.name]:evt.target.value});\r\n  }\r\n\r\n  onSortEnd=({oldIndex,newIndex})=>{\r\n    this.setState(({colors})=>({\r\n      colors:arrayMove(colors,oldIndex,newIndex)\r\n    }))\r\n  };\r\n \r\n  clearColors(){\r\n      this.setState({colors:[]});\r\n  }\r\n\r\n  addRandomColor(){\r\n    const allColors=this.props.palettes.map(p=>p.colors).flat();\r\n    var rand=Math.floor(Math.random()*allColors.length);\r\n    const randomColor=allColors[rand];\r\n    this.setState({colors:[...this.state.colors,randomColor]});\r\n    console.log(randomColor);\r\n  }\r\n\r\n  render() {\r\n    const { classes,maxColors,palettes } = this.props;\r\n    const { open } = this.state;\r\n    const isPaletteFull=this.state.colors.length>=20;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n       \r\n\r\n        <PaletteFormNav open={open} classes={classes} palettes={palettes} handleDrawerOpen={this.handleDrawerOpen} handleSubmit={this.handleSubmit}/>\r\n\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\r\n\r\n          <div className={classes.leftcontainer}>\r\n          <Typography variant='h4' gutterBottom>Design Your Palette</Typography>\r\n          <div className={classes.buttons}>\r\n            <Button variant='contained' color='secondary' className={classes.button} onClick={this.clearColors}>CLEAR PALETTE</Button>\r\n            <Button variant='contained' color='primary' className={classes.button} disabled={isPaletteFull} onClick={this.addRandomColor}>RANDOM COLOR</Button>\r\n          </div>\r\n         \r\n\r\n         \r\n          <ColorPickerForm isPaletteFull={isPaletteFull} colors={this.state.colors} addNewColor={this.addNewColor}/>\r\n         \r\n            </div>\r\n\r\n\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          \r\n              <DraggableColorList\r\n               colors={this.state.colors}\r\n                removeColor={this.removeColor}\r\n                axis=\"xy\"\r\n                onSortEnd={this.onSortEnd}\r\n              />\r\n          \r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","E:\\NodeJs_Projects\\color-app\\src\\DraggableBox.js",["152","153"],"\r\nimport React,{Component} from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Transform } from '@material-ui/icons';\r\nimport {SortableElement} from 'react-sortable-hoc';\r\nimport styles from './styles/DraggableBoxStyles';\r\n\r\n\r\n\r\n\r\nconst DraggableBox= SortableElement((props)=> {\r\n\r\n    const {classes,name,handleClick,color}=props\r\n    \r\n\r\n    return(\r\n        <div className={classes.root} style={{backgroundColor:color}}>\r\n\r\n        \r\n            <div className={classes.boxContent}>\r\n                <span>{name}</span>\r\n                <DeleteIcon onClick={handleClick} className={classes.deleteIcon}/>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n    \r\n    \r\n})\r\n\r\nexport default withStyles(styles)(DraggableBox);","E:\\NodeJs_Projects\\color-app\\src\\DraggableColorList.js",["154"],"import React,{Component} from 'react';\r\nimport {SortableContainer} from 'react-sortable-hoc';\r\nimport DraggableBox from './DraggableBox';\r\n\r\n\r\nconst DraggableColorList=SortableContainer(({colors,removeColor})=> {\r\n\r\n    return (\r\n        <div style={{height:\"100%\"}}>\r\n            {colors.map((color,i)=>(\r\n                  <DraggableBox \r\n                  index={i}\r\n                  key={color.name} \r\n                  color={color.color}\r\n                   handleClick={()=>removeColor(color.name)} \r\n                   name={color.name}/>\r\n              ))}\r\n        </div>\r\n\r\n    )\r\n    \r\n})\r\n\r\nexport default DraggableColorList;","E:\\NodeJs_Projects\\color-app\\src\\PaletteFormNav.js",["155","156","157"],"import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PaletteMetaForm from './PaletteMetaForm';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {ValidatorForm,TextValidator} from \"react-material-ui-form-validator\";\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from \"./styles/PaletteFormNavStyles\";\r\n\r\n\r\n\r\nclass PaletteFormNav extends Component{\r\n\r\n        constructor(props)\r\n        {\r\n            super(props);\r\n            this.state={\r\n                newPaletteName:\"\",\r\n                isFormShowing:false,\r\n            };\r\n\r\n            this.handleChange=this.handleChange.bind(this);\r\n\r\n            this.showForm=this.showForm.bind(this);\r\n\r\n            this.hideForm=this.hideForm.bind(this);\r\n        }\r\n\r\n        componentDidMount(){\r\n            ValidatorForm.addValidationRule('isPaletteNameUnique', value => (\r\n                this.props.palettes.every(paletteName => (\r\n                    paletteName.paletteName.toLowerCase() !== this.state.newPaletteName.toLowerCase()\r\n                ))\r\n            ));\r\n        }\r\n\r\n        handleChange(evt){\r\n            this.setState({[evt.target.name]:evt.target.value});\r\n        }\r\n\r\n        showForm(){\r\n          this.setState({isFormShowing:true});\r\n        }\r\n\r\n        hideForm(){\r\n          this.setState({isFormShowing:false});\r\n        }\r\n\r\n        render()\r\n        {\r\n            const {classes,open} = this.props;\r\n            const {newPaletteName}=this.state;\r\n            return(\r\n                <div className=\"root\">\r\n        <CssBaseline />\r\n        <AppBar\r\n          position='fixed'\r\n          color=\"default\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='Open drawer'\r\n              onClick={this.props.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <AddToPhotosIcon />\r\n            </IconButton>\r\n\r\n            <Typography variant='h6' color='inherit' noWrap>\r\n              Create Palette\r\n            </Typography>\r\n\r\n            \r\n          </Toolbar>\r\n          <div className={classes.NavBtns}>\r\n\r\n          \r\n{/* <ValidatorForm onSubmit={()=>this.props.handleSubmit(newPaletteName)}>\r\n<TextValidator value={this.state.newPaletteName} onChange={this.handleChange} name=\"newPaletteName\"  label=\"Palette Name\" \r\nvalidators={['required','isPaletteNameUnique']} errorMessages={['Palette Name required','palette name must be unique']}/>\r\n<Button variant=\"contained\" color=\"primary\" type=\"submit\">Save Palette</Button>\r\n\r\n</ValidatorForm> */}\r\n\r\n      <Link to=\"/\"><Button variant=\"contained\" className={classes.buttons} color=\"secondary\">Go Back</Button></Link>\r\n      <Button variant=\"contained\" className={classes.buttons} color=\"primary\" onClick={this.showForm}>\r\n        Save\r\n      </Button>\r\n\r\n        {this.state.isFormShowing && \r\n          <PaletteMetaForm palettes={this.props.palettes} hideForm={this.hideForm} handleSubmit={this.props.handleSubmit}/>\r\n        }\r\n</div>\r\n\r\n        </AppBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);","E:\\NodeJs_Projects\\color-app\\src\\ColorPickerForm.js",[],"E:\\NodeJs_Projects\\color-app\\src\\PaletteMetaForm.js",["158","159","160","161","162"],"import React,{Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {ValidatorForm,TextValidator} from \"react-material-ui-form-validator\";\r\nimport {Picker} from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nclass PaletteMetaForm extends Component{\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state={\r\n                open:true,\r\n                newPaletteName:\"\",\r\n                stage:\"form\",\r\n            }\r\n\r\n            this.handleChange=this.handleChange.bind(this);\r\n\r\n            this.emojiPicker=this.emojiPicker.bind(this);\r\n\r\n            this.savePalette=this.savePalette.bind(this);\r\n        }\r\n\r\n        componentDidMount(){\r\n            ValidatorForm.addValidationRule('isPaletteNameUnique', value => (\r\n                this.props.palettes.every(paletteName => (\r\n                    paletteName.paletteName.toLowerCase() !== this.state.newPaletteName.toLowerCase()\r\n                ))\r\n            ));\r\n        }\r\n\r\n         handleClickOpen = () => {\r\n            this.setState({open:true});\r\n          };\r\n        \r\n         handleClose = () => {\r\n            this.setState({open:false});\r\n          };\r\n\r\n          handleChange(evt){\r\n            this.setState({[evt.target.name]:evt.target.value});\r\n        }\r\n\r\n          emojiPicker(){\r\n              this.setState({stage:\"emoji\"});\r\n          }\r\n\r\n          savePalette(emoji){\r\n\r\n              const newPalette={\r\n                paletteName:this.state.newPaletteName,\r\n                emoji:emoji.native,\r\n              }\r\n\r\n              this.props.handleSubmit(newPalette);\r\n          }\r\n\r\n          \r\n\r\n\r\n        render()\r\n        {\r\n            const {open,newPaletteName} =this.state\r\n\r\n            const {hideForm,handleSubmit} =this.props;\r\n\r\n                return(\r\n                    <div>\r\n\r\n                    <Dialog open={this.state.stage===\"emoji\"} onClose={hideForm}>\r\n                    <Picker onSelect={this.savePalette} />\r\n                    </Dialog>\r\n                               \r\n                    <Dialog open={this.state.stage===\"form\"} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\" onClose={hideForm}>\r\n                    <DialogTitle id=\"form-dialog-title\">Create Palette</DialogTitle>\r\n                    <ValidatorForm onSubmit={this.emojiPicker}>\r\n                    <DialogContent>\r\n                    <DialogContentText>\r\n                      Enter Palette Name to create a Palette ,make sure it is unique!\r\n                    </DialogContentText>\r\n          \r\n                   \r\n\r\n                  <TextValidator value={this.state.newPaletteName} onChange={this.handleChange} name=\"newPaletteName\"  label=\"Palette Name\" \r\n                    validators={['required','isPaletteNameUnique']} errorMessages={['Palette Name required','palette name must be unique']}/>\r\n\r\n\r\n\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                   <Button onClick={hideForm} color=\"primary\">\r\n                   Cancel\r\n                  </Button>\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">Save Palette</Button>\r\n                  </DialogActions>\r\n                   </ValidatorForm>\r\n                  </Dialog>\r\n\r\n                        </div>\r\n                );\r\n\r\n        }\r\n\r\n}\r\n\r\nexport default PaletteMetaForm;","E:\\NodeJs_Projects\\color-app\\src\\styles\\NewPaletteFormStyles.js",[],"E:\\NodeJs_Projects\\color-app\\src\\styles\\PaletteFormNavStyles.js",["163"],"E:\\NodeJs_Projects\\color-app\\src\\styles\\ColorPickerFormStyles.js",[],"E:\\NodeJs_Projects\\color-app\\src\\styles\\DraggableBoxStyles.js",[],"E:\\NodeJs_Projects\\color-app\\src\\constants.js",[],"E:\\NodeJs_Projects\\color-app\\src\\styles\\sizes.js",["164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":12},{"ruleId":"169","severity":1,"message":"173","line":9,"column":10,"nodeType":"171","messageId":"172","endLine":9,"endColumn":17},{"ruleId":"169","severity":1,"message":"174","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":1,"column":1,"nodeType":"177","endLine":244,"endColumn":5},{"ruleId":"169","severity":1,"message":"178","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":16},{"ruleId":"169","severity":1,"message":"179","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":14},{"ruleId":"169","severity":1,"message":"180","line":1,"column":15,"nodeType":"171","messageId":"172","endLine":1,"endColumn":24},{"ruleId":"175","severity":1,"message":"181","line":4,"column":1,"nodeType":"177","endLine":130,"endColumn":3},{"ruleId":"175","severity":1,"message":"181","line":3,"column":1,"nodeType":"177","endLine":26,"endColumn":3},{"ruleId":"175","severity":1,"message":"181","line":1,"column":1,"nodeType":"177","endLine":61,"endColumn":4},{"ruleId":"175","severity":1,"message":"181","line":1,"column":1,"nodeType":"177","endLine":15,"endColumn":3},{"ruleId":"175","severity":1,"message":"181","line":1,"column":1,"nodeType":"177","endLine":40,"endColumn":3},{"ruleId":"175","severity":1,"message":"181","line":1,"column":1,"nodeType":"177","endLine":61,"endColumn":2},{"ruleId":"169","severity":1,"message":"182","line":129,"column":21,"nodeType":"171","messageId":"172","endLine":129,"endColumn":30},{"ruleId":"169","severity":1,"message":"180","line":2,"column":15,"nodeType":"171","messageId":"172","endLine":2,"endColumn":24},{"ruleId":"169","severity":1,"message":"183","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":19},{"ruleId":"169","severity":1,"message":"180","line":1,"column":15,"nodeType":"171","messageId":"172","endLine":1,"endColumn":24},{"ruleId":"169","severity":1,"message":"184","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":16},{"ruleId":"169","severity":1,"message":"185","line":15,"column":23,"nodeType":"171","messageId":"172","endLine":15,"endColumn":36},{"ruleId":"169","severity":1,"message":"186","line":63,"column":20,"nodeType":"171","messageId":"172","endLine":63,"endColumn":34},{"ruleId":"169","severity":1,"message":"187","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"188","line":70,"column":20,"nodeType":"171","messageId":"172","endLine":70,"endColumn":24},{"ruleId":"169","severity":1,"message":"186","line":70,"column":25,"nodeType":"171","messageId":"172","endLine":70,"endColumn":39},{"ruleId":"169","severity":1,"message":"189","line":72,"column":29,"nodeType":"171","messageId":"172","endLine":72,"endColumn":41},{"ruleId":"190","severity":1,"message":"191","line":81,"column":125,"nodeType":"192","endLine":81,"endColumn":143},{"ruleId":"193","severity":1,"message":"194","line":50,"column":3,"nodeType":"195","messageId":"196","endLine":50,"endColumn":7},{"ruleId":"175","severity":1,"message":"181","line":16,"column":1,"nodeType":"177","endLine":30,"endColumn":2},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Palette' is defined but never used.","'Slider' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'colors' is defined but never used.","'chroma' is defined but never used.","'Component' is defined but never used.","Assign object to a variable before exporting as module default","'maxColors' is assigned a value but never used.","'Transform' is defined but never used.","'MenuIcon' is defined but never used.","'TextValidator' is defined but never used.","'newPaletteName' is assigned a value but never used.","'TextField' is defined but never used.","'open' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'hide'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]